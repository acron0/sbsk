{:use-macros nil, :excludes #{}, :name sbsk.views, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core, re-com re-com.core, re-com.core re-com.core}, :uses nil, :defs {title {:protocol-inline nil, :meta {:file "/home/acron/projects/personal/sbsk/src/cljs/sbsk/views.cljs", :line 5, :column 7, :end-line 5, :end-column 12, :arglists (quote ([]))}, :name sbsk.views/title, :variadic false, :file "src/cljs/sbsk/views.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, main-panel {:protocol-inline nil, :meta {:file "/home/acron/projects/personal/sbsk/src/cljs/sbsk/views.cljs", :line 10, :column 7, :end-line 10, :end-column 17, :arglists (quote ([]))}, :name sbsk.views/main-panel, :variadic false, :file "src/cljs/sbsk/views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:children :name :div :height}, :order [:name :div :height :children]}, :doc nil}